class GlozinToggleMobileWidgetHandler extends elementorModules.frontend.handlers
  .Base {
  bindEvents() {
    const e = this.getElementSettings();
    var t = this.$element.find(".glozin-toggle-mobile__title");
    jQuery(window)
      .on("resize", function () {
        if (jQuery(window).width() < 767 && e.toggle_menu == "yes") {
          t.addClass("glozin-toggle-mobile__title--toggle");
          t.next(".glozin-toggle-mobile__content").addClass("clicked");
          t.closest(".glozin-toggle-mobile__wrapper").addClass("dropdown");
          if (e.toggle_status == "yes") {
            t.addClass("active");
            t.siblings(".glozin-toggle-mobile__content").css(
              "display",
              "block"
            );
          } else {
            t.removeClass("active");
          }
        } else {
          t.removeClass("glozin-toggle-mobile__title--toggle");
          t.removeClass("active");
          t.siblings(".glozin-toggle-mobile__content").removeAttr("style");
          t.next(".glozin-toggle-mobile__content").removeClass("clicked");
          t.next(".glozin-toggle-mobile__content").removeAttr("style");
          t.closest(".glozin-toggle-mobile__wrapper").removeClass("dropdown");
        }
      })
      .trigger("resize");
    this.$element.on(
      "click",
      ".glozin-toggle-mobile__title--toggle",
      function (e) {
        e.preventDefault();
        if (!t.closest(".glozin-toggle-mobile__wrapper").hasClass("dropdown")) {
          return;
        }
        jQuery(this).next(".clicked").stop().slideToggle();
        jQuery(this).toggleClass("active");
        return false;
      }
    );
  }
}
class GlozinCarouselWidgetHandler extends elementorModules.frontend.handlers
  .CarouselBase {
  getDefaultSettings() {
    const e = super.getDefaultSettings(),
      t = this.$element.find(".glozin-carousel--elementor");
    if (t.hasClass("swiper")) {
      e.selectors.carousel = ".glozin-carousel--elementor";
    } else {
      e.selectors.carousel = ".glozin-carousel--elementor .swiper";
    }
    return e;
  }
  getSwiperSettings() {
    const e = this,
      t = super.getSwiperSettings(),
      n = this.getElementSettings(),
      o = +n.slides_to_show || 3,
      l = 1 === o,
      s = elementorFrontend.config.responsive.activeBreakpoints,
      i = { mobile: 1, tablet: l ? 1 : 2 };
    let r = {};
    let a = o;
    var d = n.image_spacing_custom ? parseInt(n.image_spacing_custom) : 0;
    t.spaceBetween = n.custom_space_between == "yes" ? 0 : d;
    if (n.slides_rows && parseInt(n.slides_rows) > 1) {
      t.grid = { fill: "row", rows: n.slides_rows };
      t.loop = false;
    }
    var g = false;
    Object.keys(s).forEach((e) => {
      if (s[e].value !== s[e].default_value) {
        return;
      }
      s[e].value = parseInt(s[e].value) + 1;
      g = true;
    });
    if (g) {
      Object.keys(s)
        .reverse()
        .forEach((e) => {
          const t = i[e] ? i[e] : a;
          r[s[e].value] = {
            slidesPerView: +parseInt(n["slides_to_show_" + e]) || t,
            slidesPerGroup: +parseInt(n["slides_to_scroll_" + e]) || 1,
          };
          if (n.image_spacing_custom) {
            r[s[e].value].spaceBetween = this.getSpaceBetween(e);
          }
          a = +parseInt(n["slides_to_show_" + e]) || t;
        });
      t.breakpoints = r;
    }
    if (n.slides_rows && parseInt(n.slides_rows) > 1) {
      t.grid = { fill: "row", rows: n.slides_rows };
    }
    Object.keys(s).forEach((e) => {
      if (n.custom_space_between == "yes") {
        t.breakpoints[s[e].value].spaceBetween = 0;
      } else {
        t.breakpoints[s[e].value].spaceBetween = n["image_spacing_custom_" + e]
          ? n["image_spacing_custom_" + e]
          : d;
      }
      if (e == "mobile" && n["slidesperview_auto_mobile"] == "yes") {
        t.breakpoints[s[e].value].slidesPerView = 1.5;
      }
      if (n.slides_rows && n.slides_rows > 1) {
        t.breakpoints[s[e].value].grid = {
          fill: "row",
          rows: n["slides_rows_" + e] ? n["slides_rows_" + e] : n.slides_rows,
        };
      }
    });
    t.on.resize = function () {
      var n = this,
        o = this.$el
          .closest(".glozin-carousel--elementor")
          .find(".product-thumbnail"),
        l = this.$el
          .closest(".glozin-carousel--elementor")
          .find(".post-thumbnail"),
        e = jQuery(n.slides).find(".gz-ratio--iframe").length
          ? jQuery(n.slides).find(".gz-ratio--iframe").width()
          : 0;
      if (o.length > 0) {
        jQuery(this.$el).imagesLoaded(function () {
          var e = o.outerHeight(),
            t = e / 2 + 15 + "px";
          jQuery(n.navigation.$nextEl).css({ "--gz-arrow-top": t });
          jQuery(n.navigation.$prevEl).css({ "--gz-arrow-top": t });
        });
      }
      if (l.length > 0) {
        jQuery(this.$el).imagesLoaded(function () {
          var e = l.outerHeight(),
            t = e / 2 + "px";
          jQuery(n.navigation.$nextEl).css({ "--gz-arrow-top": t });
          jQuery(n.navigation.$prevEl).css({ "--gz-arrow-top": t });
        });
      }
      if (e > 0) {
        jQuery(n.slides)
          .find(".gz-ratio--iframe")
          .css({ "--gz-item-iframe-width": e });
        if (jQuery(n.slides).find(".gz-ratio--iframe iframe").length > 0) {
          var t =
            (jQuery(n.slides).find(".gz-ratio--iframe iframe").height() /
              jQuery(n.slides).find(".gz-ratio--iframe iframe").width()) *
            100;
          jQuery(n.slides)
            .find(".gz-ratio--iframe")
            .css({ "--gz-ratio-percent": t + "%" });
        }
      }
    };
    if (
      this.$element
        .find(".glozin-carousel--elementor")
        .hasClass("glozin-carousel--background")
    ) {
      t.on.slideChangeTransitionStart = function () {
        const e = this.slides[this.activeIndex];
        const t = e.dataset.backgroundColor;
        jQuery(this.$el)
          .find(".glozin-split-hero-slider__item")
          .css({ "background-color": t });
        if (
          jQuery(this.$el).parent().find(".glozin-split-hero-slider__images")
            .length > 0
        ) {
          jQuery(this.$el)
            .parent()
            .find(".glozin-split-hero-slider__image")
            .removeClass("active");
          jQuery(this.$el)
            .parent()
            .find(".glozin-split-hero-slider__image")
            .eq(this.activeIndex)
            .addClass("active");
        }
      };
    }
    return t;
  }
  onEditSettingsChange(e) {
    if (this.swiper === undefined) {
      return;
    }
    if ("activeItemIndex" === e) {
      this.swiper.slideToLoop(this.getEditSettings("activeItemIndex") - 1);
    }
  }
  a11ySetSlideAriaHidden(e = "") {
    const t = "initialisation" === e ? 0 : this.swiper?.activeIndex;
    if ("number" !== typeof t) {
      return;
    }
    const n = this.elements.$swiperContainer.find(
      this.getSettings("selectors").slideContent
    );
    n.each((e, t) => {
      t.removeAttribute("inert");
    });
  }
  onInit() {
    super.onInit();
    this.elements.$swiperContainer.find(".swiper-wrapper").attr("role", "list");
    this.elements.$swiperContainer
      .find(".swiper-slide")
      .attr("role", "listitem");
    this.glozinUpdateSwiper();
  }
  glozinUpdateSwiper() {
    const e = this.$element.find(".swiper").get(0)?.swiper;
    if (!e) {
      return;
    }
    const t = this.getElementSettings();
    e.params.breakpoints[
      elementorFrontend.config.responsive.activeBreakpoints["tablet"].value
    ].spaceBetween =
      t.custom_space_between == "yes" ? 0 : this.getSpaceBetween("desktop");
    if (t.slides_rows && parseInt(t.slides_rows) > 1) {
      e.params.breakpoints[
        elementorFrontend.config.responsive.activeBreakpoints["tablet"].value
      ].grid = { fill: "row", rows: t.slides_rows };
    }
    e.update();
  }
}
class GlozinCodeDiscountWidgetHandler extends elementorModules.frontend.handlers
  .Base {
  getDefaultSettings() {
    return { selectors: { button: ".glozin-code-discount" } };
  }
  getDefaultElements() {
    const e = this.getSettings("selectors");
    return { $button: this.findElement(e.button) };
  }
  bindEvents() {
    super.bindEvents();
    this.elements.$button.on({
      click: (e) => {
        e.preventDefault();
        const t = jQuery(e.currentTarget);
        const n = t.find(".glozin-button-text-code").text().trim();
        navigator.clipboard.writeText(n);
        t.addClass("added");
        t.find(".glozin-button-text-copied").removeClass("invisible");
        t.find(".glozin-button-text-code").addClass("invisible");
        setTimeout(() => {
          t.removeClass("added");
          t.find(".glozin-button-text-copied").addClass("invisible");
          t.find(".glozin-button-text-code").removeClass("invisible");
        }, 2e3);
      },
    });
  }
  onInit() {
    super.onInit();
    if (this.$element.closest(".modal__content").length > 0) {
      this.$element
        .closest(".modal__content")
        .addClass("modal--has-code-discount");
    }
  }
}
class GlozinShortContentWidgetHandler extends elementorModules.frontend.handlers
  .Base {
  bindEvents() {
    var e = this.getElementSettings();
    var s = e.max_height.size + e.max_height.unit;
    this.$element.find(".glozin-short-content__content").css("max-height", s);
    this.$element.on("click", ".glozin-short-content__button", function (e) {
      e.preventDefault();
      var t = jQuery(this),
        n = t.data("show"),
        o = t.data("hide");
      if (t.siblings(".glozin-short-content__content").hasClass("show")) {
        t.siblings(".glozin-short-content__content").css("max-height", s);
        t.siblings(".glozin-short-content__content").removeClass("show");
        t.text(n);
      } else {
        var l = t
          .siblings(".glozin-short-content__content")
          .get(0).scrollHeight;
        t.siblings(".glozin-short-content__content").addClass("show");
        t.siblings(".glozin-short-content__content").css("max-height", l);
        t.text(o);
      }
    });
  }
}
class GlozinHotspotWidgetHandler extends elementorModules.frontend.handlers
  .Base {
  bindEvents() {
    var t = this.$element.find(".glozin-lookbook-carousel__product"),
      o = this.$element.find(".lookbook-carousel-modal-content");
    this.$element
      .off("click", ".glozin-lookbook-carousel__button")
      .on("click", ".glozin-lookbook-carousel__button", function (e) {
        e.preventDefault();
        var t = jQuery(this).closest(".glozin-lookbook-carousel__item");
        t.siblings()
          .find(".glozin-lookbook-carousel__product")
          .removeClass("active");
        jQuery(this)
          .closest(".glozin-lookbook-carousel__product")
          .toggleClass("active")
          .siblings()
          .removeClass("active");
        if (
          jQuery(this)
            .closest(".glozin-lookbook-carousel__product")
            .hasClass("active")
        ) {
          jQuery(this)
            .closest(".glozin-carousel--elementor")
            .addClass("hotspot-active");
          t.find(".glozin-lookbook-carousel__product-inner").removeClass(
            "hidden"
          );
        } else {
          jQuery(this)
            .closest(".glozin-carousel--elementor")
            .removeClass("hotspot-active");
          t.find(".glozin-lookbook-carousel__product-inner").addClass("hidden");
        }
        var n = jQuery(this)
          .closest(".glozin-lookbook-carousel__product")
          .find(".glozin-lookbook-carousel__product-inner")
          .clone()
          .html();
        o.html(n);
      });
    jQuery(document.body).on("click", function (e) {
      if (jQuery(e.target).closest(t).length > 0) {
        return;
      }
      t.closest(".glozin-carousel--elementor").removeClass("hotspot-active");
      t.removeClass("active");
      t.find(".glozin-lookbook-carousel__product-inner").addClass("hidden");
    });
  }
  onInit() {
    super.onInit();
    var e = this.$element.find(".lookbook-carousel-modal"),
      t = this.$element.find(".glozin-lookbook-carousel__button");
    jQuery(window)
      .on("resize", function () {
        if (jQuery(window).width() < 1025) {
          t.attr("data-toggle", "modal");
          e.find(".glozin-lookbook-carousel__close").trigger("click");
        } else {
          t.removeAttr("data-toggle");
        }
      })
      .trigger("resize");
  }
}
class GlozinImageBeforeAfterWidgetHandler extends elementorModules.frontend
  .handlers.Base {
  getDefaultSettings() {
    return { selectors: { container: ".glozin-image-before-after" } };
  }
  getDefaultElements() {
    const e = this.getSettings("selectors");
    return { $container: this.$element.find(e.container) };
  }
  changeImagesHandle() {
    const e = this.elements.$container;
    e.imagesLoaded(function () {
      e.find(".box-thumbnail").imageslide();
    });
  }
  onInit() {
    super.onInit();
    if (!this.elements.$container.length) {
      return;
    }
    this.changeImagesHandle();
  }
}
class GlozinContentPreviewTabsWidgetHandler extends elementorModules.frontend
  .handlers.Base {
  actionTabs() {
    jQuery(".glozin-content-preview-tabs__title").on("mouseenter", function () {
      var e = jQuery(this),
        t = e.data("key");
      if (e.attr("data-active") === "true") {
        return;
      }
      e.siblings(".glozin-content-preview-tabs__title").attr(
        "data-active",
        "false"
      );
      e.attr("data-active", "true");
      var n = e
        .closest(".glozin-content-preview-tabs")
        .find('.glozin-content-preview-tabs__image[data-key="' + t + '"]');
      n.siblings(".glozin-content-preview-tabs__image").attr(
        "data-active",
        "false"
      );
      n.attr("data-active", "true");
    });
  }
  onInit() {
    super.onInit();
    this.actionTabs();
  }
}
class GlozinProductHightlightSliderWidgetHandler extends elementorModules
  .frontend.handlers.Base {
  getDefaultSettings() {
    return { selectors: { container: ".glozin-product-highlight-slider" } };
  }
  getDefaultElements() {
    const e = this.getSettings("selectors");
    return { $container: this.$element.find(e.container) };
  }
  getProductSwiperInit() {
    const e = this.getElementSettings();
    const t = e.autoplay === "yes";
    const n = t
      ? { delay: e.autoplay_speed || 3e3, disableOnInteraction: false }
      : false;
    const o = this.elements.$container;
    const l = o.find(".glozin-product-highlight-slider__image").get(0);
    const s = o.find(".glozin-product-highlight-slider__product").get(0);
    var i = new Swiper(
      this.elements.$container
        .find(".glozin-product-highlight-slider__image")
        .get(0),
      {
        watchOverflow: true,
        watchSlidesVisibility: true,
        watchSlidesProgress: true,
        allowTouchMove: false,
        effect: "fade",
        fadeEffect: { crossFade: true },
        loop: e.infinite == "yes" ? true : false,
        autoplay: n,
        speed: parseInt(e.speed) || 800,
      }
    );
    var r = new Swiper(
      this.elements.$container
        .find(".glozin-product-highlight-slider__product")
        .get(0),
      {
        watchOverflow: true,
        thumbs: { swiper: i },
        pagination: {
          el: this.elements.$container.find(".swiper-pagination").get(0),
          clickable: true,
        },
        spaceBetween: 30,
        loop: e.infinite == "yes" ? true : false,
        autoplay: n,
        speed: parseInt(e.speed) || 800,
      }
    );
    if (t && e.pause_on_hover === "yes") {
      const a = () => {
        i.autoplay?.stop();
        r.autoplay?.stop();
      };
      const d = () => {
        i.autoplay?.start();
        r.autoplay?.start();
      };
      l.addEventListener("mouseenter", a);
      l.addEventListener("mouseleave", d);
      s.addEventListener("mouseenter", a);
      s.addEventListener("mouseleave", d);
    }
  }
  onInit() {
    var e = this;
    super.onInit();
    e.getProductSwiperInit();
  }
}
class GlozinTiktokVideoCarouselWidgetHandler extends elementorModules.frontend
  .handlers.Base {
  getDefaultSettings() {
    return {
      selectors: {
        wrapper: ".glozin-tiktok-video-carousel",
        item: ".glozin-tiktok-lazy-wrapper",
      },
    };
  }
  getDefaultElements() {
    const e = this.getSettings("selectors");
    return {
      $wrapper: this.$element.find(e.wrapper),
      $items: this.$element.find(e.item),
    };
  }
  bindEvents() {
    this.lazyLoadVideos();
  }
  lazyLoadVideos() {
    const e = new IntersectionObserver(
      (e, l) => {
        e.forEach((e) => {
          if (e.isIntersecting) {
            const t = e.target;
            const n = t.getAttribute("data-src");
            const o = document.createElement("iframe");
            o.setAttribute("src", n);
            o.setAttribute("width", "100%");
            o.setAttribute("height", "739");
            o.setAttribute(
              "style",
              "display:block;visibility:unset;max-height:739px;"
            );
            o.setAttribute(
              "sandbox",
              "allow-popups allow-popups-to-escape-sandbox allow-scripts allow-top-navigation allow-same-origin"
            );
            t.innerHTML = "";
            t.appendChild(o);
            l.unobserve(t);
          }
        });
      },
      { rootMargin: "100px", threshold: 0.1 }
    );
    this.elements.$items.each(function () {
      e.observe(this);
    });
  }
}
class GlozinSlidesWidgetHandler extends elementorModules.frontend.handlers
  .Base {
  getDefaultSettings() {
    return { selectors: { wrapper: ".glozin-slides-elementor" } };
  }
  getDefaultElements() {
    const e = this.getSettings("selectors");
    return { $wrapper: this.$element.find(e.wrapper) };
  }
  onInit() {
    super.onInit();
    this.updateFullScreenVariable();
  }
  updateFullScreenVariable() {
    const e = this.getElementSettings("slides_full_screen_desktop") === "yes";
    if (!e) return;
    const t = (e) => {
      const t = document.querySelector(e);
      return t ? t.offsetHeight : 0;
    };
    const n =
      t("#wpadminbar") + t(".topbar") + t(".campaignbar") + t(".site-header");
    this.elements.$wrapper
      .get(0)
      .style.setProperty("--gz-slides-full-screen-height", n + "px");
  }
}
class GlozinProductSpotlightGridWidgetHandler extends elementorModules.frontend
  .handlers.Base {
  getDefaultSettings() {
    return {
      selectors: {
        contentImage: ".glozin-product-spotlight__content-image",
        imageItem: ".glozin-product-spotlight__image-item",
        item: ".glozin-product-spotlight__item",
      },
    };
  }
  getDefaultElements() {
    const e = this.getSettings("selectors");
    return {
      $contentImages: this.$element.find(e.contentImage),
      $imageItems: this.$element.find(e.imageItem),
    };
  }
  bindEvents() {
    const l = this.getSettings("selectors");
    const { $contentImages: e, $imageItems: s } = this.elements;
    e.on("mouseenter", function () {
      const e = jQuery(this);
      const t = e.data("id");
      s.removeClass("active");
      jQuery(l.item).removeClass("active");
      const n = s.filter(`[data-id="${t}"]`);
      n.addClass("active");
      const o = e.closest(l.item);
      o.addClass("active");
    });
  }
}
jQuery(window).on("elementor/frontend/init", () => {
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-navigation-menu.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinToggleMobileWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-subscribe-group.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinToggleMobileWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-slides.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinCarouselWidgetHandler,
        { $element: e }
      );
      elementorFrontend.elementsHandler.addHandler(GlozinSlidesWidgetHandler, {
        $element: e,
      });
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-categories-carousel.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinCarouselWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-testimonial-carousel.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinCarouselWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-shoppable-images-carousel.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinCarouselWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-icon-box-carousel.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinCarouselWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-banner-carousel.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinCarouselWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-tiktok-video-carousel.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinCarouselWidgetHandler,
        { $element: e }
      );
      elementorFrontend.elementsHandler.addHandler(
        GlozinTiktokVideoCarouselWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-posts-carousel.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinCarouselWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-image-carousel.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinCarouselWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-image-box-carousel.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinCarouselWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-code-discount.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinCodeDiscountWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-short-content.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinShortContentWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-lookbook-carousel.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinCarouselWidgetHandler,
        { $element: e }
      );
      elementorFrontend.elementsHandler.addHandler(GlozinHotspotWidgetHandler, {
        $element: e,
      });
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-image-before-after.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinImageBeforeAfterWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-shoppable-video-carousel.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinCarouselWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-content-preview-tabs.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinContentPreviewTabsWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-product-highlight-slider.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinProductHightlightSliderWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-product-spotlight-grid.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinProductSpotlightGridWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-split-hero-slider.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinCarouselWidgetHandler,
        { $element: e }
      );
    }
  );
});
