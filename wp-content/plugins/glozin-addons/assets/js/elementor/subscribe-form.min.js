class GlozinSubscribeWidgetHandler extends elementorModules.frontend.handlers
  .Base {
  getDefaultSettings() {
    return {
      selectors: {
        formRow: ".mc4wp-form-row",
        formControl: ".mc4wp-form-control",
      },
    };
  }
  getDefaultElements() {
    const e = this.getSettings("selectors");
    return {
      $formRow: this.$element.find(e.formRow),
      $formControl: this.$element.find(e.formControl),
    };
  }
  onInit() {
    super.onInit();
    const e = this.elements.$formRow;
    const o = this.elements.$formControl;
    const n = this.getSettings("selectors");
    if (!e.length) return;
    e.on("keyup focus change", n.formControl, function () {
      jQuery(this).closest(n.formRow).addClass("focused");
    }).on("blur", n.formControl, function () {
      if (jQuery(this).val() === "") {
        jQuery(this).closest(n.formRow).removeClass("focused");
      }
    });
    e.each(function () {
      const o = jQuery(this).find(n.formControl);
      if (o.val() !== "") {
        jQuery(this).addClass("focused");
      }
      o.on("animationstart", function (e) {
        if (e.originalEvent.animationName === "autofill-animation") {
          o.closest(n.formRow).addClass("focused");
        }
      });
    });
    jQuery(window).on("load", function () {
      o.each(function () {
        if (jQuery(this).val().length !== 0) {
          jQuery(this).closest(n.formRow).addClass("focused");
        }
      });
    });
  }
}
jQuery(window).on("elementor/frontend/init", () => {
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-subscribe-box.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinSubscribeWidgetHandler,
        { $element: e }
      );
    }
  );
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/glozin-subscribe-group.default",
    (e) => {
      elementorFrontend.elementsHandler.addHandler(
        GlozinSubscribeWidgetHandler,
        { $element: e }
      );
    }
  );
});
